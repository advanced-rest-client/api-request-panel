/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   src/ApiRequestPanel.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

import {html, css, LitElement} from 'lit-element';

import {HeadersParserMixin} from '@advanced-rest-client/headers-parser-mixin/headers-parser-mixin.js';

import {EventsTargetMixin} from '@advanced-rest-client/events-target-mixin/events-target-mixin.js';

export {ApiRequestPanel};

declare class ApiRequestPanel extends
  EventsTargetMixin(
  HeadersParserMixin(
  LitElement)) {
  readonly styles: any;
  readonly _hasResponse: any;

  /**
   * AMF HTTP method (operation in AMF vocabulary) ID.
   */
  selected: string|null|undefined;

  /**
   * Location of the `node_modules` folder.
   * It should be a path from server's root path including node_modules.
   */
  authPopupLocation: string|null|undefined;

  /**
   * By default application hosting the element must set `selected`
   * property. When using `api-navigation` element
   * by setting this property the element listens for navigation events
   * and updates the state
   */
  handleNavigationEvents: boolean|null|undefined;

  /**
   * Hides the URL editor from the view.
   * The editor is still in the DOM and the `urlInvalid` property still will be set.
   */
  noUrlEditor: boolean|null|undefined;

  /**
   * When set it renders a label with the computed URL.
   * This intended to be used with `noUrlEditor` set to true.
   * This way it replaces the editor with a simple label.
   */
  urlLabel: boolean|null|undefined;

  /**
   * A base URI for the API. To be set if RAML spec is missing `baseUri`
   * declaration and this produces invalid URL input. This information
   * is passed to the URL editor that prefixes the URL with `baseUri` value
   * if passed URL is a relative URL.
   */
  baseUri: string|null|undefined;

  /**
   * OAuth2 redirect URI.
   * This value **must** be set in order for OAuth 1/2 to work properly.
   */
  redirectUri: string|null|undefined;

  /**
   * If set it will renders the view in the narrow layout.
   */
  narrow: boolean|null|undefined;

  /**
   * Enables compatibility with Anypoint styling
   */
  compatibility: boolean|null|undefined;

  /**
   * Enables Material Design outlined style
   */
  outlined: boolean|null|undefined;

  /**
   * When set the editor is in read only mode.
   */
  readOnly: boolean|null|undefined;

  /**
   * When set all controls are disabled in the form
   */
  disabled: boolean|null|undefined;

  /**
   * Created by the transport ARFC `request` object
   */
  request: object|null|undefined;

  /**
   * Created by the transport ARC `response` object.
   */
  response: object|null|undefined;

  /**
   * A flag indincating request error.
   */
  isErrorResponse: boolean|null|undefined;

  /**
   * True if the response is made by the Fetch / XHR api.
   */
  responseIsXhr: boolean|null|undefined;

  /**
   * An error object associated with the response when error.
   */
  responseError: object|null|undefined;

  /**
   * Response full loading time. This information is received from the
   * transport library.
   */
  loadingTime: number|null|undefined;

  /**
   * If the transport method is able to collect detailed information about request timings
   * then this value will be set. It's the `timings` property from the HAR 1.2 spec.
   */
  timing: object|null|undefined;

  /**
   * If the transport method is able to collect detailed information about redirects timings
   * then this value will be set. It's a list of `timings` property from the HAR 1.2 spec.
   */
  redirectsTiming: any[]|null|undefined;

  /**
   * It will be set if the transport method can generate information about redirections.
   */
  redirects: any[]|null|undefined;

  /**
   * Http message sent to the server.
   *
   * This information should be available only in case of advanced HTTP transport.
   */
  sourceMessage: string|null|undefined;

  /**
   * Forces the console to send headers defined in this string overriding any used defined
   * header.
   * This should be an array of headers with `name` and `value` keys, e.g.:
   * ```
   * [{
   *   name: "x-token",
   *   value: "value"
   * }]
   * ```
   */
  appendHeaders: any[]|null|undefined;

  /**
   * If set every request made from the console will be proxied by the service provided in this
   * value.
   * It will prefix entered URL with the proxy value. so the call to
   * `http://domain.com/path/?query=some+value` will become
   * `https://proxy.com/path/http://domain.com/path/?query=some+value`
   *
   * If the proxy require a to pass the URL as a query parameter define value as follows:
   * `https://proxy.com/path/?url=`. In this case be sure to set `proxy-encode-url`
   * attribute.
   */
  proxy: string|null|undefined;

  /**
   * If `proxy` is set, it will URL encode the request URL before appending it to the proxy URL.
   * `http://domain.com/path/?query=some+value` will become
   * `https://proxy.com/?url=http%3A%2F%2Fdomain.com%2Fpath%2F%3Fquery%3Dsome%2Bvalue`
   */
  proxyEncodeUrl: boolean|null|undefined;

  /**
   * ID of latest request.
   * It is received from the `api-request-editor` when `api-request`
   * event is dispatched. When `api-response` event is handled
   * the id is compared and if match it dispays the result.
   *
   * This system allows to use different request panels on single app
   * and don't mix the results.
   */
  lastRequestId: string|null|undefined;

  /**
   * Prohibits rendering of the documentation (the icon and the
   * description).
   */
  noDocs: boolean|null|undefined;

  /**
   * If set it computes `hasOptional` property and shows checkbox in the
   * form to show / hide optional properties.
   */
  allowHideOptional: boolean|null|undefined;

  /**
   * If set, enable / disable param checkbox is rendered next to each
   * form item.
   */
  allowDisableParams: boolean|null|undefined;

  /**
   * When set, renders "add custom" item button.
   * If the element is to be used withouth AMF model this should always
   * be enabled. Otherwise users won't be able to add a parameter.
   */
  allowCustom: boolean|null|undefined;

  /**
   * API server definition from the AMF model.
   *
   * This value to be set when partial AMF mnodel for an endpoint is passed
   * instead of web api to be passed to the `api-url-data-model` element.
   *
   * Do not set with full AMF web API model.
   */
  server: object|null|undefined;

  /**
   * Supported protocl versions.
   *
   * E.g.
   *
   * ```json
   * ["http", "https"]
   * ```
   *
   * This value to be set when partial AMF mnodel for an endpoint is passed
   * instead of web api to be passed to the `api-url-data-model` element.
   *
   * Do not set with full AMF web API model.
   */
  protocols: any[]|null|undefined;

  /**
   * API version name.
   *
   * This value to be set when partial AMF mnodel for an endpoint is passed
   * instead of web api to be passed to the `api-url-data-model` element.
   *
   * Do not set with full AMF web API model.
   */
  version: string|null|undefined;

  /**
   * Holds the value of the currently selected server
   * Data type: URI
   */
  serverValue: string|null|undefined;

  /**
   * Holds the type of the currently selected server
   * Values: `server` | `slot` | `custom`
   */
  serverType: string|null|undefined;

  /**
   * Optional property to set
   * If true, the server selector is not rendered
   */
  noServerSelector: boolean|null|undefined;

  /**
   * Optional property to set
   * If true, the server selector custom base URI option is rendered
   */
  allowCustomBaseUri: boolean|null|undefined;
  constructor();
  connectedCallback(): void;
  render(): any;
  _attachListeners(node: any): void;
  _detachListeners(node: any): void;

  /**
   * Sets OAuth 2 redirect URL for the authorization panel
   *
   * @param location Bower components location
   */
  _updateRedirectUri(location: String|null): void;

  /**
   * A handler for the API call.
   * This handler will only check if there is authorization required
   * and if the user is authorizaed.
   *
   * @param e `api-request` event
   */
  _apiRequestHandler(e: CustomEvent|null): void;

  /**
   * Appends headers defined in the `appendHeaders` array.
   *
   * @param e The `api-request` event.
   */
  _appendConsoleHeaders(e: CustomEvent|null): void;

  /**
   * Sets the proxy URL if the `proxy` property is set.
   *
   * @param e The `api-request` event.
   */
  _appendProxy(e: CustomEvent|null): void;

  /**
   * Handler for the `api-response` custom event. Sets values on the response
   * panel when response is ready.
   */
  _apiResponseHandler(e: CustomEvent|null): void;

  /**
   * Propagate `api-response` detail object.
   *
   * @param data Event's detail object
   */
  _propagateResponse(data: object|null): void;

  /**
   * Clears response panel when selected id changed.
   */
  _selectedChanged(id: String|null): void;

  /**
   * Clears response panel.
   */
  clearResponse(): void;

  /**
   * Handles navigation events and computes available servers.
   *
   * When `handleNavigationEvents` is set then it also manages the selection.
   */
  _handleNavigationChange(e: CustomEvent|null): void;

  /**
   * @returns A template for the request panel
   */
  _requestTemplate(): TemplateResult|null;

  /**
   * @returns A template for the response view
   */
  _responseTemplate(): TemplateResult|string|null;
}
